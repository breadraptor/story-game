<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create
//message[0] = "test";
//message_end = 0; //6 is the last number in our array

depth = -1;
message_current = 0; //0 is the first number in our array, and the message we are currently at
message_draw = ""; //this is what we 'write' out. It's blank right now
if (game_runner.debug){
    increase = 3;
}
else {
    increase = 0.5; //the speed at which new characters are added
}
characters = 0; //how many characters have already been drawn
hold = 0; //if we hold 'Z', the text will render faster
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///step
if (characters &lt; message_length) { //if current character count is less than the amount in current message* 
    hold = keyboard_check(vk_space); 
    characters += increase * (1 + hold); //increase speed based on hold
    message_draw = string_copy(message[message_current], 0, characters); //copy string to current character
} 
else { // done drawing (if current character is more than the amount in the current message)
// player can press space to choose dialogue or continue displaying messages (normal msg or choice msg)
    if (keyboard_check_pressed(vk_space)) { 
        if (arrow_obj.visible){ // made a choice
            create_text(interaction_id, arrow_obj.choice);
            arrow_obj.visible = false;
            arrow_obj.y = arrow_obj.top_choice;
            arrow_obj.choice = 0;
            trace("killing it because choice has taken over");
            instance_destroy(); 
        }
        else if (message_current &lt; message_end) { //there are more messages left to show
            message_current += 1;
            message_length = string_length(message[message_current]);  //get the new character length for message
            if (message_length &gt; 84){
                trace("TOO LONG MESSAGE WARNING");
            }
            if (string_char_at(message[message_current], 0) == "&gt;"){
                message[message_current] = string_replace(message[message_current], "&gt;", "")
                // dialogue option time babye
                
                message[message_current] = string_insert("   ", message[message_current], 0);
                for (var k = 0; k &lt; string_length(message[message_current]) - 1; k++){
                    if (string_char_at(message[message_current], k) == "#"){
                        message[message_current] = string_insert("   ", message[message_current], k+1);
                        break;
                    }
                } 

                message_length = string_length(message[message_current]); 
                player_obj.choosing = true;
                arrow_obj.visible = true;
            }
            characters = 0; //set the characters back to 0
            message_draw = ""; //clear the drawn text
        }
        else { //our messages are done
            trace("killing it");
            instance_destroy();
            player_obj.interacting = false;
            text_box_obj.visible = false;
            arrow_obj.visible = false;
            arrow_obj.x = arrow_obj.original_x;
            arrow_obj.y = arrow_obj.original_y;
            arrow_obj.choice = 0;
        }
    }
}

// old bad code in : our messages are done
            //if (game_runner.friend_talked &amp;&amp; room == 4){
            //    instance_destroy(friend_obj);
            //    instance_deactivate_object(game_runner.friend_int); //interact
            //    instance_deactivate_object(game_runner.friend_coll) //collide
            //    game_runner.path = 0;
            //    game_runner.d_box = -1;
           // }
           
/*if (message_length &gt; 30 &amp;&amp; (string_char_at(message[message_current], 0) != "&gt;")){
    for (var i = 30; i &gt; 0; i--){
        if (string_char_at(message[message_current], i) == " "){
            message[message_current] = string_insert("#", message[message_current], i+1)
            message_length = string_length(message[message_current]); 
            break;
        }
    }
}
if ((message_length &gt; 55) &amp;&amp; (string_char_at(message[message_current], 0) != "&gt;")){ // fix printout 
    for (var i = 55; i &gt; 0; i--){
        if (string_char_at(message[message_current], i) == " "){
            message[message_current] = string_insert("#", message[message_current], i + 1)
            message_length = string_length(message[message_current]); 
            break;
        }
    }
} */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black)

draw_set_font(font0);
var col = make_color_hsv(287, 68, 25); //todo make this do something

//draw_text(x, y, message_draw); //draw the text at the coordinates
draw_text_ext(x, y, message_draw, -1, 400); //old max: 275
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
